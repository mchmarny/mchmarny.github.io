<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>iot on Mark Chmarny Blog</title><link>https://blog.chmarny.com/categories/iot/</link><description>Recent content in iot on Mark Chmarny Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 03 Jun 2019 12:41:23 +0000</lastBuildDate><atom:link href="https://blog.chmarny.com/categories/iot/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Flick buttons with Cloud Run on GCP</title><link>https://blog.chmarny.com/posts/using-flick-buttons-with-cloud-run-on-gcp/</link><pubDate>Mon, 03 Jun 2019 12:41:23 +0000</pubDate><guid>https://blog.chmarny.com/posts/using-flick-buttons-with-cloud-run-on-gcp/</guid><description>A co-worker recently told me about flic.io buttons. These button caught my attention because they can include triggers for single, double, or hold click and can be easily wired up to all kinds of actions.
I instantly thought of of a few really interesting applications.</description></item><item><title>Vision of smarter thingz; project in adaptive metric flow modeling</title><link>https://blog.chmarny.com/posts/vision-of-smarter-thingz-project-in-adaptive-metric-flow-modeling/</link><pubDate>Sun, 03 Apr 2016 00:43:24 +0000</pubDate><guid>https://blog.chmarny.com/posts/vision-of-smarter-thingz-project-in-adaptive-metric-flow-modeling/</guid><description>Over the holidays, as many of us do, I embarked on a little extra-curriculum development effort I called thingz.io. I was driven by the pattern I’d observed in Data Center (DC) monitoring products; although that pattern also exists in many of today’s Internet of Things (IoT) solutions.</description></item><item><title>Time series data management using InfluxDB</title><link>https://blog.chmarny.com/posts/time-series-data-management-using-influxdb/</link><pubDate>Sun, 03 Apr 2016 00:41:49 +0000</pubDate><guid>https://blog.chmarny.com/posts/time-series-data-management-using-influxdb/</guid><description>After a pretty positive experience with influxdb I wanted to create a super simple telemetry producer (this one in Node.js) to spotlight a few types of time series data query supported in influxdb. (Source code available on GitHub)
To get live data for this demo, I created a simple script that generates metric data for CPU Utilization and Free Memory on your local machine at 1 sec resolution.</description></item></channel></rss>