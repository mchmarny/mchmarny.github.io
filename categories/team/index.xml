<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>team on Mark Chmarny Blog</title><link>https://blog.chmarny.com/categories/team/</link><description>Recent content in team on Mark Chmarny Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 30 Mar 2021 19:35:48 +0000</lastBuildDate><atom:link href="https://blog.chmarny.com/categories/team/index.xml" rel="self" type="application/rss+xml"/><item><title>Complexity can be learned but abstractions come at a long-term cost</title><link>https://blog.chmarny.com/posts/complexity-can-be-learned-but-abstractions-come-at-long-term-cost/</link><pubDate>Tue, 30 Mar 2021 19:35:48 +0000</pubDate><guid>https://blog.chmarny.com/posts/complexity-can-be-learned-but-abstractions-come-at-long-term-cost/</guid><description>All complexity needs to be abstracted, right? This reductionist statements misses nuance around the inherent cost/benefit tradeoffs, especially when you consider these over time.
Donâ€™t get me wrong, there often are good reasons for additional layers to make things simpler (grow adoption, lowering toil, removing friction, etc.</description></item></channel></rss>