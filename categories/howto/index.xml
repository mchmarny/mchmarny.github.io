<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>howto on Mark Chmarny Blog</title><link>https://blog.chmarny.com/categories/howto/</link><description>Recent content in howto on Mark Chmarny Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 05 Apr 2021 01:09:03 +0000</lastBuildDate><atom:link href="https://blog.chmarny.com/categories/howto/index.xml" rel="self" type="application/rss+xml"/><item><title>Custom news scraper using free services from GitHub, Firebase, and Sengrid</title><link>https://blog.chmarny.com/posts/custom-news-scraper-using-free-services-from-github-firebase-sengrid/</link><pubDate>Mon, 05 Apr 2021 01:09:03 +0000</pubDate><guid>https://blog.chmarny.com/posts/custom-news-scraper-using-free-services-from-github-firebase-sengrid/</guid><description>Increasing large amount of technical news I read come from the posts shared on Hacker News or on Twitter. While both of these services have search options, neither of these seem to be advanced enough to narrow my searches at the desired level or to setup automatic delivery.</description></item><item><title>How to debug container image content</title><link>https://blog.chmarny.com/posts/how-to-debug-container-image-content/</link><pubDate>Tue, 27 Aug 2019 22:20:44 +0000</pubDate><guid>https://blog.chmarny.com/posts/how-to-debug-container-image-content/</guid><description>When dealing with file permissions in a non-root image or building apps that include static content (like css or templates), I sometime get an error resulting from the final image content mismatch with my expectations.
Most of the time the errors are pretty obvious, simple fix and rebuild will do.</description></item><item><title>Using Flick buttons with Cloud Run on GCP</title><link>https://blog.chmarny.com/posts/using-flick-buttons-with-cloud-run-on-gcp/</link><pubDate>Mon, 03 Jun 2019 12:41:23 +0000</pubDate><guid>https://blog.chmarny.com/posts/using-flick-buttons-with-cloud-run-on-gcp/</guid><description>A co-worker recently told me about flic.io buttons. These button caught my attention because they can include triggers for single, double, or hold click and can be easily wired up to all kinds of actions.
I instantly thought of of a few really interesting applications.</description></item><item><title>How to use Stackdriver to monitor custom application metrics</title><link>https://blog.chmarny.com/posts/how-to-use-stackdriver-to-monitor-custom-application-metrics/</link><pubDate>Wed, 27 Dec 2017 22:08:13 +0000</pubDate><guid>https://blog.chmarny.com/posts/how-to-use-stackdriver-to-monitor-custom-application-metrics/</guid><description>Google Stackdriver has thousands of build-in metrics to monitor everything from Kubernetes cluster to database or storage. Stackdriver is also not just limited to Google Cloud Platform (GCP), it supports a number of AWS-native services and extensive log monitoring capabilities for a wide array of open source software packages, whether they run in the Cloud or in on premises.</description></item><item><title>Using Google Cloud Spanner to measure social media influence over stock market</title><link>https://blog.chmarny.com/posts/using-google-cloud-spanner-to-measure-social-media-influence-over-stock-market/</link><pubDate>Tue, 16 May 2017 15:51:12 +0000</pubDate><guid>https://blog.chmarny.com/posts/using-google-cloud-spanner-to-measure-social-media-influence-over-stock-market/</guid><description>I wanted to use the now generally available Cloud Spanner database to write an app that would track stock prices and social media sentiment to identify potential correlation.
To test even the validity of this approach I put together a Go app that subscribes to Twitter stream for all companies defined in the Stocks table and scores each event against the Google NLP API while comparing the user sentiment against the stock ask price against Yahoo API.</description></item><item><title>Twitter Sentiment Analysis in Go using Google NLP API</title><link>https://blog.chmarny.com/posts/twitter-sentiment-analysis-in-go-using-google-nlp/</link><pubDate>Fri, 12 May 2017 17:26:11 +0000</pubDate><guid>https://blog.chmarny.com/posts/twitter-sentiment-analysis-in-go-using-google-nlp/</guid><description>As part of my ramp up on Google APIs I wanted to create a project that would allow me some practical exercise in a context of a real application.
TFeel (short for Twitter Feeling) is a simple sentiment analyses over tweeter data for specific Twitter search terms using Google Cloud services:</description></item><item><title>Data Exchange â€” How to Amplify Value of Machine Data</title><link>https://blog.chmarny.com/posts/data-exchange-how-to-amplify-value-of-machine-data/</link><pubDate>Tue, 17 May 2016 13:33:17 +0000</pubDate><guid>https://blog.chmarny.com/posts/data-exchange-how-to-amplify-value-of-machine-data/</guid><description>The presentation that goes along with this post is available here
In my last post I went over the value cycle of machine generated data. In this post, I want to follow up with a few ideas on how to further amplify value of that data by expanding its context beyond the walls of owning organization, in a construct we came to know as Data Exchange, and list a few innovation opportunities in each one of these areas.</description></item><item><title>Time series data management using InfluxDB</title><link>https://blog.chmarny.com/posts/time-series-data-management-using-influxdb/</link><pubDate>Sun, 03 Apr 2016 00:41:49 +0000</pubDate><guid>https://blog.chmarny.com/posts/time-series-data-management-using-influxdb/</guid><description>After a pretty positive experience with influxdb I wanted to create a super simple telemetry producer (this one in Node.js) to spotlight a few types of time series data query supported in influxdb. (Source code available on GitHub)
To get live data for this demo, I created a simple script that generates metric data for CPU Utilization and Free Memory on your local machine at 1 sec resolution.</description></item></channel></rss>